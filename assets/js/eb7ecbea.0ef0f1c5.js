"use strict";(self.webpackChunkreact_native_global_components_docs=self.webpackChunkreact_native_global_components_docs||[]).push([[565],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(g,p(p({ref:t},s),{},{components:n})):a.createElement(g,p({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,p=new Array(o);p[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:r,p[1]=l;for(var u=2;u<o;u++)p[u]=n[u];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o=n.p+"assets/images/create-popup-example-88c7328a613faed3d1b0fb5a124ab838.gif",p={},l="createPopup \u2b50\ufe0f",i={unversionedId:"API/createPopup",id:"API/createPopup",title:"createPopup \u2b50\ufe0f",description:"Example",source:"@site/docs/API/createPopup.mdx",sourceDirName:"API",slug:"/API/createPopup",permalink:"/docs/API/createPopup",draft:!1,editUrl:"https://github.com/JeongShin/react-native-global-components/tree/main/packages/create-docusaurus/templates/shared/docs/API/createPopup.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PopupManager",permalink:"/docs/API/PopupManager"},next:{title:"Customize \u2b50\ufe0f",permalink:"/docs/Guides/Customize"}},u={},s=[{value:"Example",id:"example",level:2},{value:"PopupOptions",id:"popupoptions",level:2},{value:"shouldWaitForUserInteraction",id:"shouldwaitforuserinteraction",level:3},{value:"Usage",id:"usage",level:2},{value:"Step 1. create popup",id:"step-1-create-popup",level:3},{value:"Step 2. register portal",id:"step-2-register-portal",level:3},{value:"Step 3. use anywhere",id:"step-3-use-anywhere",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>show</code>",id:"show",level:3},{value:"<code>hide</code>",id:"hide",level:3},{value:"<code>Portal</code>",id:"portal",level:3}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"createpopup-\ufe0f"},"createPopup \u2b50\ufe0f"),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"// AlertPopup.tsx\ncreatePopup(AlertPopupUI, { shouldWaitForUserInteraction: true });\n\n// other file\nawait AlertPopup.show(props);\n")),(0,r.kt)("div",{className:"sample-gif"},(0,r.kt)("img",{src:o,className:"sample-gif-img",alt:"create-popup-example"})),(0,r.kt)("h2",{id:"popupoptions"},"PopupOptions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"createPopup(SimpleSnackbarUI, { shouldWaitForUserInteraction: true });\n")),(0,r.kt)("h3",{id:"shouldwaitforuserinteraction"},"shouldWaitForUserInteraction"),(0,r.kt)("p",null,"if ",(0,r.kt)("inlineCode",{parentName:"p"},"shouldWaitForUserInteraction")," set to ",(0,r.kt)("strong",{parentName:"p"},"true"),","),(0,r.kt)("p",null,"multiple popup show request will wait for currently active popup to hide then show"),(0,r.kt)("p",null,"if set to ",(0,r.kt)("strong",{parentName:"p"},"false"),", currently active popup will hide immediately"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"step-1-create-popup"},"Step 1. create popup"),(0,r.kt)("p",null,"First, implement your custom UI or you can use any PopupUIs we provide"),(0,r.kt)("p",null,"You might need core hooks for state management. see ",(0,r.kt)("a",{parentName:"p",href:"/docs/hooks/usePopupContext"},"usePopupContext")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="MyPopup.tsx"',title:'"MyPopup.tsx"'},"import { createPopup } from 'react-native-global-components';\n\ninterface MyPopupProps {\n  name: string;\n}\n\nconst MyPopup: FC<MyPopupProps> = (props) => {\n  return <View />;\n};\n\nexport default createPopup(MyPopup);\n")),(0,r.kt)("h3",{id:"step-2-register-portal"},"Step 2. register portal"),(0,r.kt)("p",null,"Portal is where your component actually rendered when you call ",(0,r.kt)("inlineCode",{parentName:"p"},"show")," method."),(0,r.kt)("p",null,"If using ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/"},"React Navigation"),", highly recommend to put it in ",(0,r.kt)("inlineCode",{parentName:"p"},"NavigationContainer")," to use navigation context in global components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"const App = () => {\n  return (\n    <NavigationContainer>\n      <RootNavigator />\n      <MyPopup.Portal />\n      <MySnackbar.Portal />\n    </NavigationContainer>\n  );\n};\n")),(0,r.kt)("p",null,"then you can do"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="MyPopup.tsx"',title:'"MyPopup.tsx"'},"import { useNavigation } from '@react-navigation/native';\nimport { createPopup, usePopupContext } from 'react-native-global-components';\n\nconst MyPopup: FC<MyPopupProps> = ({ name }) => {\n  const navigation = useNavigation();\n  const { hide } = usePopupContext();\n\n  return (\n    <Button\n      onPress={() => {\n        navigation.navigate('MyProfileScreen', { name });\n        hide();\n      }}\n    />\n  );\n};\n\nexport default createPopup(MyPopup);\n")),(0,r.kt)("h3",{id:"step-3-use-anywhere"},"Step 3. use anywhere"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"await MyPopup.show({\n  name: 'Jerry and Zeki',\n});\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"show"},(0,r.kt)("inlineCode",{parentName:"h3"},"show")),(0,r.kt)("p",null,"method to show created global component"),(0,r.kt)("p",null,"generic ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," (",(0,r.kt)("inlineCode",{parentName:"p"},"MyPopupProps")," for this guide) is inferred from your component props"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type show = (props: T) => Promise<void>;\n")),(0,r.kt)("h3",{id:"hide"},(0,r.kt)("inlineCode",{parentName:"h3"},"hide")),(0,r.kt)("p",null,"method to hide currently visible global component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type hide = () => Promise<void>;\n")),(0,r.kt)("h3",{id:"portal"},(0,r.kt)("inlineCode",{parentName:"h3"},"Portal")),(0,r.kt)("p",null,"function component to render global component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type Portal = React.FC<{}>;\n")))}m.isMDXComponent=!0}}]);