"use strict";(self.webpackChunkreact_native_global_components_docs=self.webpackChunkreact_native_global_components_docs||[]).push([[565],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(g,p(p({ref:t},u),{},{components:n})):r.createElement(g,p({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:a,p[1]=l;for(var s=2;s<o;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>p,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o=n.p+"assets/images/create-popup-example-88c7328a613faed3d1b0fb5a124ab838.gif",p={},l="createPopup",i={unversionedId:"API/createPopup",id:"API/createPopup",title:"createPopup",description:"Example",source:"@site/docs/API/createPopup.mdx",sourceDirName:"API",slug:"/API/createPopup",permalink:"/docs/API/createPopup",draft:!1,editUrl:"https://github.com/JeongShin/react-native-global-components/tree/main/packages/create-docusaurus/templates/shared/docs/API/createPopup.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PopupManager",permalink:"/docs/API/PopupManager"},next:{title:"Customize",permalink:"/docs/Guides/Customize"}},s={},u=[{value:"Example",id:"example",level:2},{value:"Usage",id:"usage",level:2},{value:"Step 1. create popup",id:"step-1-create-popup",level:3},{value:"Step 2. register portal",id:"step-2-register-portal",level:3},{value:"Step 3. use anywhere",id:"step-3-use-anywhere",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>show</code>",id:"show",level:3},{value:"<code>hide</code>",id:"hide",level:3},{value:"<code>Portal</code>",id:"portal",level:3}],c={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"createpopup"},"createPopup"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"AlertPopup.show(props);\n")),(0,a.kt)("div",{className:"sample-gif"},(0,a.kt)("img",{src:o,className:"sample-gif-img",alt:"create-popup-example"})),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"step-1-create-popup"},"Step 1. create popup"),(0,a.kt)("p",null,"First, implement your custom UI or you can use any PopupUIs we provide"),(0,a.kt)("p",null,"You might need core hooks for state management. see ",(0,a.kt)("a",{parentName:"p",href:"/docs/hooks/usePopupContext"},"usePopupContext")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="MyPopup.tsx"',title:'"MyPopup.tsx"'},"import { createPopup } from 'react-native-global-components';\n\ninterface MyPopupProps {\n  name: string;\n}\n\nconst MyPopup: FC<MyPopupProps> = (props) => {\n  return <View />;\n};\n\nexport default createPopup(MyPopup);\n")),(0,a.kt)("h3",{id:"step-2-register-portal"},"Step 2. register portal"),(0,a.kt)("p",null,"Portal is where your component actually rendered when you call ",(0,a.kt)("inlineCode",{parentName:"p"},"show")," method."),(0,a.kt)("p",null,"If using ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/"},"React Navigation"),", highly recommend to put it in ",(0,a.kt)("inlineCode",{parentName:"p"},"NavigationContainer")," to use navigation context in global components."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"const App = () => {\n  return (\n    <NavigationContainer>\n      <RootNavigator />\n      <MyPopup.Portal />\n      <MySnackbar.Portal />\n    </NavigationContainer>\n  );\n};\n")),(0,a.kt)("p",null,"then you can do"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="MyPopup.tsx"',title:'"MyPopup.tsx"'},"import { useNavigation } from '@react-navigation/native';\nimport { createPopup, usePopupContext } from 'react-native-global-components';\n\nconst MyPopup: FC<MyPopupProps> = ({ name }) => {\n  const navigation = useNavigation();\n  const { hide } = usePopupContext();\n\n  return (\n    <Button\n      onPress={() => {\n        navigation.navigate('MyProfileScreen', { name });\n        hide();\n      }}\n    />\n  );\n};\n\nexport default createPopup(MyPopup);\n")),(0,a.kt)("h3",{id:"step-3-use-anywhere"},"Step 3. use anywhere"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"MyPopup.show({\n  name: 'Jerry and Zeki',\n});\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"show"},(0,a.kt)("inlineCode",{parentName:"h3"},"show")),(0,a.kt)("p",null,"method to show created global component"),(0,a.kt)("p",null,"generic ",(0,a.kt)("inlineCode",{parentName:"p"},"T")," (",(0,a.kt)("inlineCode",{parentName:"p"},"MyPopupProps")," for this guide) is inferred from your component props"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type show = (props: T) => void;\n")),(0,a.kt)("h3",{id:"hide"},(0,a.kt)("inlineCode",{parentName:"h3"},"hide")),(0,a.kt)("p",null,"method to hide currently visible global component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type hide = () => void;\n")),(0,a.kt)("h3",{id:"portal"},(0,a.kt)("inlineCode",{parentName:"h3"},"Portal")),(0,a.kt)("p",null,"function component to render global component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type Portal = React.FC<{}>;\n")))}m.isMDXComponent=!0}}]);